
-- CRIANDO TABELA
CREATE TABLE PRODUCTS (
	CODE			INT			NOT NULL,
	DESCRIPTION		VARCHAR(50)	NOT NULL,
	EXPIRATION_DATE DATETIME,
	EAN				VARCHAR(15) NOT NULL,
	INACTIVE		INT			NOT NULL DEFAULT 0
);

-- ALTERANDO TABELA CRIANDO UMA PRIMARY KEY
ALTER TABLE PRODUCTS 
	ADD CONSTRAINT PK_PRODUCTS
		PRIMARY KEY (CODE);

-- CRIANDO INDÍCE
CREATE INDEX IDX_PRODUCTS_EAN
			ON PRODUCTS(EAN);

-- INSERINDO VALORES NAS COLUNAS
INSERT INTO PRODUCTS VALUES (1, 'Nome do Produto', GETDATE(), '1234567890', 0);

-- SELECIONANDO LINHAS QUE HÁ 'PRODUTO' NA DESCRIÇÃO
SELECT * 
	FROM PRODUCTS
WHERE DESCRIPTION LIKE '%Produto%';

-- CONTANDO QUANTAS LINHAS HÁ EM PRODUCTS E APELIDANDO COLUNA DE 'TOTAL'
SELECT COUNT(*) AS TOTAL
	FROM PRODUCTS;

-- CRIANDO TABELA COM PRIMARY KEY
CREATE TABLE STORES (
	CODE				INT			NOT NULL,
	NAME				VARCHAR(50)	NOT NULL,
	IND_INACTIVE		INT			NOT NULL DEFAULT 0,
	CONSTRAINT STORES_PK PRIMARY KEY(CODE)
);

-- REMOVENDO TABELA 'STORE' PARA RENOMEAR PARA 'STORES'
DROP TABLE STORE

-- INSERINDO VALORES NAS COLUNAS
INSERT INTO STORES(CODE, NAME) VALUES (1000, 'Filial Ourinhos')
INSERT INTO STORES(CODE, NAME) VALUES (2000, 'Filial São Paulo')
INSERT INTO STORES(CODE, NAME) VALUES (3000, 'Filial Campinas')

-- CRIANDO TABELA COM PRIMARY KEY COM DOIS CAMPOS
CREATE TABLE STOCK (
	PRODUCT_CODE	INT NOT NULL,
	BRANCH_CODE		INT NOT NULL,
	QUANTITY		DECIMAL NOT NULL DEFAULT 0,
	CONSTRAINT STOCK_PK PRIMARY KEY (PRODUCT_CODE, BRANCH_CODE)
);

-- INSERINDO VALORES NAS COLUNAS
INSERT INTO STOCK (PRODUCT_CODE, BRANCH_CODE, QUANTITY) VALUES (1, 1000, 10)
-- PRODUTO DE CÓDIGO 99 NÃO EXISTE
-- PARA RESOLVER PROBLEMA, CRIAR CHAVE ESTRANGEIRA PARA RELACIONAR TABELA COM OUTRA

-- DELETANDO TODO STOCK
DELETE FROM STOCK;
SELECT * FROM STOCK;

-- CRIANDO CHAVES ESTRANGEIRAS PARA RELACIONAR COM OUTRAS TABELAS
ALTER TABLE STOCK
	ADD CONSTRAINT FK_STOCK_PRODUCTS
		FOREIGN KEY (PRODUCT_CODE)
		REFERENCES PRODUCTS(CODE);

ALTER TABLE STOCK
	ADD CONSTRAINT FK_STOCK_STORES
		FOREIGN KEY (BRANCH_CODE)
		REFERENCES STORES(CODE);

-- DELETANDO CHAVE CRIADA (EM CASO DE ERRO)
ALTER TABLE STOCK
	DROP CONSTRAINT FK_STOCK_STORES

-- RELACIONANDO COM DUAS TABELAS PUXANDO 'NAME' DE 'STORES' E 'BRANCH_CODE' DE 'STOCK'
SELECT SCK.BRANCH_CODE,
	   ST.NAME
	FROM STOCK SCK INNER JOIN STORES ST
		ON SCK.BRANCH_CODE = ST.CODE;

-- RELACIONANDO COM TRÊS TABELAS PUXANDO DADOS DE 'STORES', 'STOCK' E 'PRODUCTS'
SELECT SCK.BRANCH_CODE,
	   ST.NAME,
	   SCK.PRODUCT_CODE,
	   P.DESCRIPTION,
	   SCK.QUANTITY
	FROM STOCK SCK INNER JOIN STORES ST
		ON SCK.BRANCH_CODE = ST.CODE
	INNER JOIN PRODUCTS P
		ON SCK.PRODUCT_CODE = P.CODE

